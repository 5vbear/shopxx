<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
 http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
 http://www.springframework.org/schema/aop
 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
 http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<!-- 引入项目配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list> <!-- 项目配置文件路径 -->
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>


	<!-- dbcp连接池 -->
<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		 <property name="url" value="${jdbc.url}" />
	     <property name="username" value="${jdbc.username}"/>
	     <property name="password" value="${jdbc.password}" />
	     <property name="maxActive" value="${jdbc.maxActive}" />
	     <!-- filters：统计监控信息，value是一个string,支持组合配置，如stat,log4j,那么问题来了，如果自定义的filter该如何配置呢，可以通过bean的形式添加 -->
<!-- 	     <property name="filters" value="${filters}" /> -->
	     <property name="proxyFilters">
	     	<list>
	     		<ref bean="stat-filter"/>
	     	</list>
	     </property> 
	</bean>


     <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="1000" />
    	<property name="logSlowSql" value="true" />
	</bean>

    <!-- mybatis相关配置 
         mybatis是基于xml配置文件和接口实现的半自动orm(对象关系型映射)框架
    -->
    <!--   mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源
          MyBatis定义数据源,同意加载配置 -->
<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="dataSource" ref="dataSource"></property>
	<!-- 配置mybatis的日志记录 
	     mybatis-config.xml mybatis的核心配置文件 用于配置个性化的mybatis相关配置
	-->
	<property name="configLocation" value="classpath:mybatis-config.xml"></property>  
	<!-- 配置xml文件扫描 -->
	<property name="mapperLocations" value="classpath:com/shop/mapper/*/*.xml"></property>
</bean>
<!-- mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory
	basePackage:指定sql映射文件/接口所在的包（自动扫描）
 -->
<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage" value="com.shop.mapper" />
	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
</bean>
	
</beans> 
